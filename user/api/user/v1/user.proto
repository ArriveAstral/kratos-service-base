syntax = "proto3";

package api.user.v1;

option go_package = "github.com/ZQCard/kratos-service-base/user/api/user/v1;v1";

import "google/api/annotations.proto";


service User {
	// 用户注册
	rpc RegisterUser (RegisterUserRequest) returns (RegisterUserReply){
		option (google.api.http) = {
			post: "/v1/user",
			body: "*"
		};
	};
	// 用户登陆-账号密码
	rpc LoginByUsername (LoginByUsernameRequest) returns (LoginUserReply){
		option (google.api.http) = {
			put: "v1/user",
			body: "*"
		};
	};
	// 用户登陆-短信验证码
	rpc LoginByVerifyCode (LoginByVerifyCodeRequest) returns (LoginUserReply){
		option (google.api.http) = {
			put: "v1/user/login/verifyCode",
			body: "*"
		};
	};
	// 获取用户信息
	rpc GetUser(GetUserRequest) returns (GetUserReply) {
		option (google.api.http) = {
			get: "/v1/user",
		};
	};
	// 检测用户是否正常
	rpc CheckUserOK (CheckUserOKRequest) returns (CheckUserOKReply){
		option (google.api.http) = {
			get: "/v1/user/ok",
		};
	};
	// 地址列表
	rpc ListAddress(ListAddressRequest) returns (ListAddressReply){
		option(google.api.http) = {
			get: "/v1/address"
		};
	}
	// 地址创建
	rpc CreateAddress (CreateAddressRequest) returns (CreateAddressReply) {
		option(google.api.http) = {
			post: "/v1/address"
			body: "*"
		};
	}
	// 地址详情
	rpc GetAddress (GetAddressRequest) returns (GetAddressReply) {
		option(google.api.http) = {
			get: "/v1/address/{id}"
		};
	}
	// 地址更新
	rpc UpdateAddress (UpdateAddressRequest) returns (UpdateAddressReply) {
		option(google.api.http) = {
			put: "/v1/address"
			body: "*"
		};
	}
	// 地址删除
	rpc DeleteAddress (DeleteAddressRequest) returns (DeleteAddressReply) {
		option (google.api.http) = {
			delete: "/v1/address/{id}"
		};
	}
}

message UserInfo {
	int64 id = 1;
	string username = 2;
	string password = 3;
	string mobile = 4;
	string nickname = 5;
	string avatar = 6;
	int64 status = 7;
}

message RegisterUserRequest {
	int64 id = 1;
	string username = 2;
	string password = 3;
	string mobile = 4;
	string nickname = 5;
	string avatar = 6;
}
message RegisterUserReply {
	string message = 1;
}

message LoginByUsernameRequest {
	string username = 1;
	string password = 2;
}

message LoginByVerifyCodeRequest {
	string mobile = 1;
	string code = 2;
}

message LoginUserReply {
	string token = 1;
}

message GetUserRequest {}
message GetUserReply {
	UserInfo User = 1;
}

message CheckUserOKRequest {}
message CheckUserOKReply {
	bool isOk = 1;
}



message AddressInfo {
	int64 id = 1;
	int64 userId = 2;
	string country = 3;
	string province = 4;
	string city = 5;
	string countryDistrict = 6;
	string detailedAddress = 7;
	int64 isDefault = 8;
	int64 status = 9;
}


message ListAddressRequest {
	int64 page = 1;
	int64 pageSize = 2;
}

message ListAddressReply {
	repeated AddressInfo results = 1;
	int64 count = 2;
}

message CreateAddressRequest {
	string country = 1;
	string province = 2;
	string city = 3;
	string countryDistrict = 4;
	string detailedAddress = 5;
	int64 isDefault = 6;
	int64 status = 7;
}
message CreateAddressReply {
}

message GetAddressRequest {
	int64 id = 1;
}
message GetAddressReply {
	int64 id = 1;
	int64 userId = 2;
	string country = 3;
	string province = 4;
	string city = 5;
	string countryDistrict = 6;
	string detailedAddress = 7;
	int64 isDefault = 8;
	int64 status = 9;
}

message UpdateAddressRequest {
	int64 id = 1;
	int64 userId = 2;
	string country = 3;
	string province = 4;
	string city = 5;
	string countryDistrict = 6;
	string detailedAddress = 7;
	int64 isDefault = 8;
	int64 status = 9;
}

message UpdateAddressReply {
}

message DeleteAddressRequest {
	int64 id = 1;
}
message DeleteAddressReply {
}
